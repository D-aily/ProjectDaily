<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="daily.mapper.ProductMapper">

	<sql id="costsearch">
			<if test="costsearch != null">
				<!-- 판매가 cost -->
				<if test="costsearch=='c1'.toString()">
					and price2 between 10000 and 30000 
				</if>
				<if test="costsearch=='c2'.toString()">
					and price2 between 30001 and 40000 
				</if>
				<if test="costsearch=='c3'.toString()">
					and price2 between 40001 and 50000 
				</if>
				<if test="costsearch=='c4'.toString()">
				<![CDATA[ and price2 > 50001   ]]>
				</if>
			</if>
	</sql>
	<sql id="kindsearch">
		<!-- 종류 kind -->
			<if test="kindsearch != null">
				<if test="kindsearch=='k1'.toString()">
					and kind=1 
				</if>
				<if test="kindsearch=='k2'.toString()">
					and kind=2 
				</if>
				<if test="kindsearch=='k3'.toString()">
					and kind=3 
				</if>
				<if test="kindsearch=='k4'.toString()">
					and kind=4
				</if>
			</if>
	</sql>
	<sql id="scoresearch">
		<!-- 상품평 score -->
			<if test="scoresearch != null">
				<if test="scoresearch=='s1'.toString()">
					and score=1 
				</if>
				<if test="scoresearch=='s2'.toString()">
					and score=2
				</if>
				<if test="scoresearch=='s3'.toString()">
					and score=3
				</if>
				<if test="scoresearch=='s4'.toString()">
					and score=4
				</if>
				<if test="scoresearch=='s5'.toString()">
					and score=5
				</if>
			</if>
	</sql>
	<sql id="keyword">
		<if test="keyword != null">
			and name Like '%' || #{keyword} || '%'
			or kind Like '%' || #{keyword} || '%'
		</if>
	</sql>


	<!-- 순서 bcplist?curPage=1&rowsPerPage=3&searchType=t&keyword=Java -->
	<select id="searchRowsCount" resultType="int">
	<![CDATA[
		select count(*) from product where productnum > 0 ]]>
		<!-- 옵션 검색 -->
		<include refid="costsearch"></include>
		<include refid="kindsearch"></include>
		<include refid="scoresearch"></include>
		<!-- 입력 검색 -->
		<include refid="keyword"></include>
		<!-- 조건문의 id : search -->
	</select>

	<!-- 입력 통합검색 -->
	<select id="keywordsearchList" resultType="vo.ProductVO">
	<![CDATA[
		select productnum,name,content,date,state,price1,price2,price3,
		quantity1,quantity2,kind,count,score from product 
		where productnum > 0 ]]>
		<include refid="keyword"></include>
		limit #{rowPerPage} OFFSET #{sno}
		<!-- between #{sno} and #{eno} -->
	</select>

	<!-- 옵션 조합검색 -->
	<select id="optionsearchList" resultType="vo.ProductVO">
	<![CDATA[
		select productnum,name,content,date,state,price1,price2,price3,
		quantity1,quantity2,kind,count,score from product 
		where productnum > 0 ]]>
		<include refid="costsearch"></include>
		<include refid="kindsearch"></include>
		<include refid="scoresearch"></include>
		<!-- 조건문의 id : search -->
		limit #{rowPerPage} OFFSET #{sno}
		<!-- between #{sno} and #{eno} -->
	</select>

	<!-- 기본 CRUD + countUp 추가 -->
	<select id="selectList" resultType="vo.ProductVO">
		select
		productnum,name,content,date,image,
		state,price1,price2,price3,quantity1,quantity2,kind,count,score from
		product order by productnum desc
	</select>

	<select id="selectOne" resultType="vo.ProductVO">
		select
		productnum,name,content,date,image,
		state,price2,kind,count,score from
		product where productnum = #{productnum}
	</select>

	<insert id="insert">
		<selectKey keyProperty="productnum" resultType="int"
			order="BEFORE">
			select IFNULL(max(productnum),0)+1 from product
		</selectKey>
		insert into product (name,content,date,image,
		state,price1,price2,price3,quantity1,quantity2,kind,count,score)
		values
		(#{name},#{content},now(),#{image},#{state},#{price1},#{price2},
		#{price3},#{quantity1},#{quantity2},#{kind},0,0)
	</insert>

	<update id="update">
		update product set name = #{name}, content = #{content},
		image = #{image}, price2 = #{price2}, state = #{state}, 
		kind = #{kind}
		where productnum = #{productnum}
	</update>

	<update id="countUp">
		update product set count = count+1 where productnum =
		#{productnum}
	</update>

	<delete id="delete">
		delete from product where productnum = #{productnum}
	</delete>

</mapper>